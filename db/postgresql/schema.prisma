generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  user_id    Int       @id @default(autoincrement())
  username   String    @unique @db.VarChar(255)
  password   String    @db.VarChar(60)
  is_admin   Boolean   @default(false)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  website    website[]
}

model event {
  event_id    Int       @id @default(autoincrement())
  website_id  Int
  session_id  Int
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  url         String    @db.VarChar(500)
  event_type  String    @db.VarChar(50)
  event_value String    @db.VarChar(5000)
  session     session   @relation(fields: [session_id], references: [session_id], onDelete: Cascade, onUpdate: NoAction)
  website     website   @relation(fields: [website_id], references: [website_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at])
  @@index([session_id])
  @@index([website_id])
}

model pageview {
  view_id     Int       @id @default(autoincrement())
  website_id  Int
  session_id  Int
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  url         String    @db.VarChar(500)
  referrer    String?   @db.VarChar(500)
  last_seen   DateTime?
  scrollDepth String?
  title       String?
  session     session   @relation(fields: [session_id], references: [session_id], onDelete: Cascade, onUpdate: NoAction)
  website     website   @relation(fields: [website_id], references: [website_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at])
  @@index([session_id])
  @@index([website_id, created_at])
  @@index([website_id])
  @@index([website_id, session_id, created_at])
}

model session {
  session_id   Int        @id @default(autoincrement())
  session_uuid String     @unique @db.VarChar
  website_id   Int
  created_at   DateTime?  @default(now()) @db.Timestamptz(6)
  hostname     String?    @db.VarChar(100)
  browser      String?    @db.VarChar(20)
  os           String?    @db.VarChar(20)
  device       String?    @db.VarChar(20)
  screen       String?    @db.VarChar(11)
  language     String?    @db.VarChar(35)
  country      String?    @db.Char(2)
  city         String?
  coordinates  Float[]
  hash         String?
  region       String?
  asn          String?
  www          Boolean?
  website      website    @relation(fields: [website_id], references: [website_id], onDelete: Cascade, onUpdate: NoAction)
  event        event[]
  pageview     pageview[]

  @@index([created_at])
  @@index([website_id])
}

model website {
  website_id   Int        @id @default(autoincrement())
  website_uuid String     @unique @db.Uuid
  user_id      Int
  name         String     @db.VarChar(100)
  domain       String?    @db.VarChar(500)
  share_id     String?    @unique @db.VarChar(64)
  created_at   DateTime?  @default(now()) @db.Timestamptz(6)
  account      account    @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  event        event[]
  pageview     pageview[]
  session      session[]

  @@index([user_id])
}

model vitals {
  id              String   @id @default(uuid())
  group           String?
  website         String?
  delta           String?
  entries         Json?
  name            String?
  value           String?
  page            String?
  hostname        String?
  referrer        String?
  speed           String?
  country         String?
  created         DateTime @default(now())
  attributionData Json?
  cpuCount        String?
  deviceMemory    String?
  navigationType  String?
  rating          String?
}

model Vitals_v2 {
  id               Int      @id @default(autoincrement())
  websiteId        Int
  url              String
  speed            String?
  browser          String?
  os               String?
  country          String?
  type             String?
  rating           String?
  navigationType   String?
  isLowEndHardware Boolean  @default(false)
  createdAt        DateTime @default(now())

  @@map("vitals_v2")
}

model sentry {
  id        String   @id @default(uuid())
  dsn       String?
  payload   String?
  url       String?
  createdAt DateTime @default(now())
}
